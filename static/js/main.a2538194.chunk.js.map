{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.jsx","utils/RandomColor.js","components/Statistics/Statistics.jsx","components/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","Profile","name","avatar","tag","location","stats","className","styles","profile","description","src","alt","Object","entries","map","key","value","label","quantity","getRandomRgbColor","r","Math","random","Statistics","title","statistics","id","percentage","item","style","backgroundColor","FriendListItem","isOnline","statusClass","online","offline","width","FriendList","friends","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transaction","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2538194.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__E5_2G\",\"description\":\"Profile_description__2_8fp\",\"avatar\":\"Profile_avatar__2HpOU\",\"name\":\"Profile_name__3xoE5\",\"tag\":\"Profile_tag__2QAnP\",\"location\":\"Profile_location__19xZX\",\"stats\":\"Profile_stats__3CeKZ\",\"label\":\"Profile_label__1l4aJ\",\"quantity\":\"Profile_quantity__U-0C9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1z0wV\",\"title\":\"Statistics_title__dj2bL\",\"stat-list\":\"Statistics_stat-list__9kQLB\",\"item\":\"Statistics_item__12NTG\",\"label\":\"Statistics_label__1tKIS\",\"percentage\":\"Statistics_percentage__3EU-D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__3T84L\",\"status\":\"FriendListItem_status__23IDW\",\"online\":\"FriendListItem_online__1j2N3 FriendListItem_status__23IDW\",\"offline\":\"FriendListItem_offline__jTyI5 FriendListItem_status__23IDW\",\"avatar\":\"FriendListItem_avatar__3k5Mr\",\"name\":\"FriendListItem_name__1NID2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend-list\":\"FriendList_friend-list__2qml7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction-history\":\"TransactionHistory_transaction-history__8XLpM\"};","import PropTypes from 'prop-types';\r\nimport styles from './Profile.module.css';\r\n\r\nconst Profile = ({ name, avatar, tag, location, stats }) => {\r\n\treturn (\r\n\t\t<div className={styles.profile}>\r\n\t\t\t<div className={styles.description}>\r\n\t\t\t\t<img src={avatar} alt={name} className={styles.avatar} />\r\n\t\t\t\t<p className={styles.name}>{name}</p>\r\n\t\t\t\t<p className={styles.tag}>@{tag}</p>\r\n\t\t\t\t<p className={styles.location}>{location}</p>\r\n\t\t\t</div>\r\n\t\t\t<ul className={styles.stats}>\r\n\t\t\t\t{Object.entries(stats).map(([key, value]) => (\r\n\t\t\t\t\t<li key={key}>\r\n\t\t\t\t\t\t<span className={styles.label}>{key}</span>\r\n\t\t\t\t\t\t<span className={styles.quantity}>{value}</span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n\r\nProfile.propTypes = {\r\n\tname: PropTypes.string.isRequired,\r\n\tavatar: PropTypes.string.isRequired,\r\n\ttag: PropTypes.string.isRequired,\r\n\tlocation: PropTypes.string.isRequired,\r\n\tstats: PropTypes.shape({\r\n\t\tfollowers: PropTypes.number.isRequired,\r\n\t\tviews: PropTypes.number.isRequired,\r\n\t\tlikes: PropTypes.number.isRequired,\r\n\t}).isRequired,\r\n};\r\n","export function getRandomRgbColor() {\r\n\tconst r = () => (Math.random() * 256) >> 0;\r\n\tconst color = `rgb(${r()}, ${r()}, ${r()})`;\r\n\treturn color;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { getRandomRgbColor } from '../../utils/RandomColor';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n\treturn (\r\n\t\t<section className={styles.statistics}>\r\n\t\t\t{title && <h2 className={styles.title}>{title}</h2>}\r\n\r\n\t\t\t<ul className={styles['stat-list']}>\r\n\t\t\t\t{stats.map(({ id, label, percentage }) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\t\tclassName={styles.item}\r\n\t\t\t\t\t\t\tstyle={{ backgroundColor: getRandomRgbColor() }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span className={styles.label}>{label}</span>\r\n\t\t\t\t\t\t\t<span className={styles.percentage}>{percentage}%</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nStatistics.propTypes = {\r\n\ttitle: PropTypes.string,\r\n\tstats: PropTypes.arrayOf(\r\n\t\tPropTypes.shape({\r\n\t\t\tid: PropTypes.string.isRequired,\r\n\t\t\tlabel: PropTypes.string.isRequired,\r\n\t\t\tpercentage: PropTypes.number.isRequired,\r\n\t\t})\r\n\t).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './FriendListItem.module.css';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline, id }) => {\r\n\tconst statusClass = isOnline ? styles.online : styles.offline;\r\n\treturn (\r\n\t\t<li className={styles.item}>\r\n\t\t\t<span className={statusClass}>{isOnline}</span>\r\n\t\t\t<img className={styles.avatar} src={avatar} alt={name} width='48' />\r\n\t\t\t<p className={styles.name}>{name}</p>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n\tavatar: PropTypes.string,\r\n\tname: PropTypes.string.isRequired,\r\n\tisOnline: PropTypes.bool.isRequired,\r\n\tid: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import PropTypes from 'prop-types';\r\nimport FriendListItem from '../FriendListItem/FriendListItem';\r\nimport styles from './FriendList.module.css';\r\n\r\nconst FriendList = ({ friends }) => {\r\n\treturn (\r\n\t\t<ul className={styles['friend-list']}>\r\n\t\t\t{friends.map(({ avatar, name, isOnline, id }) => (\r\n\t\t\t\t<FriendListItem\r\n\t\t\t\t\tkey={id}\r\n\t\t\t\t\tavatar={avatar}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\tisOnline={isOnline}\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nFriendList.propTypes = {\r\n\tfriends: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n\treturn (\r\n\t\t<table className={styles['transaction-history']}>\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>Type</th>\r\n\t\t\t\t\t<th>Amount</th>\r\n\t\t\t\t\t<th>Currency</th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{items.map(({ id, type, amount, currency }) => (\r\n\t\t\t\t\t<tr key={id}>\r\n\t\t\t\t\t\t<td>{type}</td>\r\n\t\t\t\t\t\t<td>{amount}</td>\r\n\t\t\t\t\t\t<td>{currency}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t))}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t);\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n\titems: PropTypes.arrayOf(\r\n\t\tPropTypes.shape({\r\n\t\t\tid: PropTypes.string.isRequired,\r\n\t\t\ttype: PropTypes.string.isRequired,\r\n\t\t\tamount: PropTypes.string.isRequired,\r\n\t\t\tcurrency: PropTypes.string.isRequired,\r\n\t\t})\r\n\t),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import './App.css';\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nimport user from './data/user.json';\nimport statisticalData from './data/statistical-data.json';\nimport friends from './data/friends.json';\nimport transaction from './data/transactions.json';\n\nconst App = () => {\n\treturn (\n\t\t<>\n\t\t\t<Profile\n\t\t\t\tname={user.name}\n\t\t\t\ttag={user.tag}\n\t\t\t\tlocation={user.location}\n\t\t\t\tavatar={user.avatar}\n\t\t\t\tstats={user.stats}\n\t\t\t/>\n\t\t\t<Statistics title='Upload stats' stats={statisticalData} />\n\t\t\t<Statistics stats={statisticalData} />\n\t\t\t<FriendList friends={friends} />\n\t\t\t<TransactionHistory items={transaction} />\n\t\t</>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}